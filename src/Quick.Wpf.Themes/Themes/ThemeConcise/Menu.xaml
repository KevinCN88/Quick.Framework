<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource qf_br_main_bkg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource qf_br_border}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Foreground" Value="{DynamicResource qf_br_text}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border TextElement.Foreground="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource qf_br_ctrl_bkg_disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle"  Value="True" />
        <Setter Property="Background" Value="{DynamicResource qf_br_main_bkg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource qf_br_border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource qf_br_text}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" TextElement.Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <MenuScrollingVisibilityConverter x:Key="menuScrollingVisibilityConverter" />
    <Geometry x:Key="menuDownArrowGeo">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="menuUpArrowGeo">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="menuRightArrowGeo">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Style x:Key="menuScrollBtnStyle" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent" SnapsToDevicePixels="true">
                        <Rectangle DockPanel.Dock="Right" x:Name="R1" Width="1" Fill="Transparent" />
                        <Rectangle DockPanel.Dock="Bottom" x:Name="B1" Height="1" Fill="Transparent" />
                        <Rectangle DockPanel.Dock="Left" x:Name="L1" Width="1" Fill="Transparent" />
                        <Rectangle DockPanel.Dock="Top" x:Name="T1" Height="1"  Fill="Transparent" />
                        <ContentPresenter x:Name="ContentContainer" Margin="2,2,2,2" VerticalAlignment="Center"  HorizontalAlignment="Center" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="R1" Property="Fill"  Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="B1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="L1" Property="Fill"  Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="T1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="ContentContainer" Property="Margin" Value="3,3,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollViewer for a MenuItem-->
    <Style x:Key="menuScrollViewerStyle" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"  Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <!--<SnippetmenuScrollViewerStyle>-->
                <!--ScrollViewer for a MenuItem-->
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton Style="{StaticResource menuScrollBtnStyle}"  Grid.Row="0" Grid.Column="0" Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource menuScrollingVisibilityConverter}" ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource menuUpArrowGeo}" />
                        </RepeatButton>
                        <RepeatButton Style="{StaticResource menuScrollBtnStyle}" Grid.Row="2" Grid.Column="0" Command="{x:Static ScrollBar.LineDownCommand}"  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource menuScrollingVisibilityConverter}" ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource menuDownArrowGeo}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
                <!--</SnippetmenuScrollViewerStyle>-->
            </Setter.Value>
        </Setter>
    </Style>

    <!--<SnippetMenuItem>-->
    <!--<Snippet9>-->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin"  Value="18,4,4,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="0"  Background="{DynamicResource qf_br_text}" />

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--</Snippet9>-->

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0" BorderBrush="{DynamicResource qf_br_border}" Background="Transparent" Padding="{TemplateBinding Padding}">
            <Grid>
                <ContentPresenter x:Name="header" VerticalAlignment="Center" Margin="0,0" ContentSource="Header" HorizontalAlignment="Center" RecognizesAccessKey="True" />
                <Popup x:Name="Popup" Placement="Bottom" VerticalOffset="1" HorizontalOffset="0" IsOpen="{TemplateBinding IsSubmenuOpen}" Focusable="False"
                        PopupAnimation="Fade" PlacementTarget="{Binding ElementName=Border}">
                    <Border x:Name="SubmenuBorder" BorderBrush="{DynamicResource qf_br_border}" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="0" Background="{DynamicResource qf_br_main_bkg}">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource menuScrollViewerStyle}">
                            <StackPanel Grid.IsSharedSizeScope="True" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--<Setter TargetName="SubmenuBorder" Property="BorderThickness" Value="1,0,1,1" />-->
                <Setter Property="BorderThickness" TargetName="Border" Value="0,0,0,0" />
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource qf_br_ctrl_bkg}" />
            </Trigger>
            <!--<SnippetTriggerSourceName>-->
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,0,0" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
            </Trigger>
            <!--</SnippetTriggerSourceName>-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource qf_br_text}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Background="Transparent" Padding="{TemplateBinding Padding}">
            <Grid>
                <ContentPresenter Margin="0" VerticalAlignment="Center"  ContentSource="Header" HorizontalAlignment="Center" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource qf_br_ctrl_bkg}">
                </Setter>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0" Padding="{TemplateBinding Padding}" Background="Transparent">
            <Grid Grid.IsSharedSizeScope="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut2" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="0" VerticalAlignment="Center" ContentSource="Icon" />
                <Border x:Name="Check" Visibility="Hidden" Width="14" Height="14" VerticalAlignment="Center">
                    <Viewbox x:Name="CheckMark" Visibility="Hidden">
                        <Path x:Name="CheckPath" Fill="{DynamicResource qf_br_dec}"  Data="M1014.592 228.256l-90.848-90.848c-12.576-12.576-32.832-12.576-45.408 0l-464.48 490.368-266.24-266.368c-12.704-12.704-33.312-12.704-46.016 0l-92.032 92.096c-12.704 12.672-12.704 33.28 0 46.016l378.656 387.456c7.328 7.36 17.28 9.888 26.848 8.64 9.888 1.472 20.192-1.024 27.776-8.64l571.744-613.28c12.544-12.544 12.544-32.896 0-45.44z">
                        </Path>
                    </Viewbox>
                </Border>
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                <!--<ContentPresenter Grid.Column="2" Margin="18,0" ContentSource="InputGestureText" HorizontalAlignment="Left" />-->
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="8,0,4,0" TextAlignment="Left" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon"  Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark"  Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility"  Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource qf_br_ar_dec_l_d_v}" />
                <Setter Property="TextBlock.Foreground" TargetName="Border" Value="{DynamicResource qf_br_text_item_selected}" />
                <Setter Property="Fill" TargetName="CheckPath" Value="{DynamicResource qf_br_text_item_selected}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource qf_br_text_item_disabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0" Padding="{TemplateBinding Padding}" Background="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                <Viewbox Grid.Column="3" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,3,0">
                    <Path x:Name="mark" Data="M 10,1 18,10 10,19 Z" Fill="{DynamicResource qf_br_text}" />
                </Viewbox>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="8,0,4,0" TextAlignment="Left" DockPanel.Dock="Right" />
                <Popup x:Name="Popup" Placement="Right"  HorizontalOffset="0" VerticalOffset="-3" IsOpen="{TemplateBinding IsSubmenuOpen}" Focusable="False" PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True"  Background="{DynamicResource qf_br_main_bkg}"  BorderThickness="1" BorderBrush="{DynamicResource qf_br_border}">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource menuScrollViewerStyle}">
                            <StackPanel Grid.IsSharedSizeScope="True"  IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource qf_br_ar_dec_l_d_v}" />
                <Setter Property="TextBlock.Foreground" TargetName="Border" Value="{DynamicResource qf_br_text_item_selected}" />
                <Setter Property="TextBlock.Foreground" TargetName="Icon" Value="{DynamicResource qf_br_text_item_selected}" />
                <Setter Property="Fill" TargetName="mark" Value="{DynamicResource qf_br_text_item_selected}" />
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius"  Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource qf_br_text_item_disabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="5,3" />
        <Style.Triggers>
            <Trigger Property="Role"  Value="TopLevelHeader">
                <Setter Property="Template"  Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template"  Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--</SnippetMenuItem>-->
</ResourceDictionary>
