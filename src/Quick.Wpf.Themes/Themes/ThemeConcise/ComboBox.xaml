<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
    <Style x:Key="cbxToggleBtnStyle"
           TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Background" Value="{DynamicResource qf_br_ctrl_bkg_d}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"/>
                        <Border Name="PART_Border"
                                Margin="{TemplateBinding BorderThickness}"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0,0,1,0"/>
                        <Path Name="Arrow"
                              Grid.Column="1"
                              Fill="{DynamicResource qf_br_combobox_btn}"
                              StrokeThickness="0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 8 0 L 4 4 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="cbxEditBoxStyle" TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="CaretBrush" Value="{DynamicResource qf_br_text}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource qf_br_text_selected}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border  Name="Border" CornerRadius="0" Padding="0" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <ScrollViewer Margin="0" BorderThickness="0" BorderBrush="Transparent" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="cbxEditBoxTpl" TargetType="ComboBox">
        <Grid Name="Placement"
              SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>

            <Popup Name="PART_Popup"
                   AllowsTransparency="True"
                   Grid.ColumnSpan="2"
                   Placement="Bottom"
                   Margin="0,1,0,0"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                   PopupAnimation="{DynamicResource ResourceKey={x:Static Member=SystemParameters.ComboBoxPopupAnimationKey}}">
                <Grid Name="PART_DropDown"
                      SnapsToDevicePixels="True"
                      MinWidth="{TemplateBinding ActualWidth}"
                      MinHeight="{TemplateBinding ActualHeight}">
                    <Border Name="PART_DropDownBorder"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"/>
                    <ScrollViewer Margin="0,6,0,6" SnapsToDevicePixels="True">
                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"  Name="ItemsPresenter"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </Grid>
            </Popup>
            <ToggleButton Name="PART_ToggleButton"
                          Grid.ColumnSpan="2"
                          Style="{DynamicResource ResourceKey=cbxToggleBtnStyle}"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
            <TextBox Name="PART_EditableTextBox" 
                     Style="{DynamicResource ResourceKey=cbxEditBoxStyle}"
                     Margin="{TemplateBinding Padding}"
                     Foreground="{TemplateBinding Foreground}"
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Validation.HasError" Value="true" />
                    <Condition Property="IsEnabled" Value="true" />
                    <Condition Property="IsMouseOver" Value="false" />
                    <Condition Property="IsFocused" Value="false" />
                    <Condition Property="IsKeyboardFocusWithin" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource qf_br_text_danger}" />
            </MultiTrigger>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="PART_DropDownBorder" Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="PART_DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}"
           TargetType="ComboBox">
        <Setter Property="ShouldPreserveUserEnteredPrefix" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource qf_br_text}"/>
        <Setter Property="Background" Value="{DynamicResource qf_br_ctrl_bkg_d}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource qf_br_border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Popup Name="PART_Popup"
                               AllowsTransparency="True"
                               Grid.ColumnSpan="2"
                               Placement="Bottom"
                               Margin="0,1,0,0"
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               PopupAnimation="{DynamicResource ResourceKey={x:Static Member=SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Grid Name="PART_DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MinHeight="{TemplateBinding ActualHeight}">
                                <Border Name="PART_DropDownBorder"
                                        BorderThickness="1"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}"/>
                                <ScrollViewer Margin="0,6,0,6" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"  Name="ItemsPresenter"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <ToggleButton Name="PART_ToggleButton"
                                      Grid.ColumnSpan="2"
                                      Style="{DynamicResource ResourceKey=cbxToggleBtnStyle}"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        <ContentPresenter IsHitTestVisible="False"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="Popup.AllowsTransparency" Value="True">
                            <Setter TargetName="PART_DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource qf_br_border_highlight}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource qf_br_ctrl_bkg_disabled}"/>
            </Trigger>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Template" Value="{DynamicResource ResourceKey=cbxEditBoxTpl}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBoxItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

        <Setter Property="Control.HorizontalContentAlignment">
            <Setter.Value>
                <Binding Path="HorizontalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <Binding Path="VerticalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Padding">
            <Setter.Value>
                <Thickness>4</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
            <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource qf_br_ar_dec_l_d_v}" />
                            <Setter Property="TextBlock.Foreground" TargetName="Bd" Value="{DynamicResource qf_br_text_item_selected}" />
                        </Trigger>
                        <Trigger Property="ComboBoxItem.IsEnabled" Value="False">
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{DynamicResource qf_br_text_item_disabled}">
                            </Setter>
                        </Trigger>-->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="TextBlock.Foreground" TargetName="Bd" Value="{DynamicResource qf_br_text_item_selected}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource qf_br_ar_dec_l_d_v}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource qf_br_text_item_disabled}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource qf_br_item_bkg_mouse_over}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextBlock.Foreground" TargetName="Bd" Value="{DynamicResource qf_br_text_item_selected}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource qf_br_ar_dec_l_d_v}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
